name: ci-release
on:
  release:
    types:
    - created
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      APP_VERSION: ${{ github.event.release.tag_name }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: docker
      run: |-
        echo "${APP_PACKAGES_PASSWORD}" | docker login "${APP_PACKAGES_URL}" \
        --username "${APP_PACKAGES_USERNAME}" \
        --password-stdin
        docker build . \
        --file ./Dockerfile \
        --tag "${APP_PACKAGES_URL}:latest" \
        --tag "${APP_PACKAGES_URL}:${APP_VERSION}"
        docker push "${APP_PACKAGES_URL}:latest"
        docker push "${APP_PACKAGES_URL}:${APP_VERSION}"
      env:
        APP_PACKAGES_URL: docker.pkg.github.com/${{ github.repository }}/dgca-issuance-web
        APP_PACKAGES_USERNAME: ${{ github.actor }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-20.04
    environment: dev
    needs:
    - build
    env:
      APP_VERSION: ${{ github.event.release.tag_name }}
    steps:
    - name: cf setup
      run: |-
        curl -sL "https://packages.cloudfoundry.org/stable?release=${CF_RELEASE}&version=${CF_VERSION}" | \
        sudo tar -zx -C /usr/local/bin
      env:
        CF_VERSION: 7.2.0
        CF_RELEASE: linux64-binary
    - name: cf push
      run: |-
        cf api ${CF_API}
        cf auth
        cf target -o ${CF_ORG} -s ${CF_SPACE}
        cf push ${APP_NAME} --docker-image ${APP_IMAGE}:${APP_VERSION} --docker-username ${CF_DOCKER_USERNAME}
      env:
        APP_NAME: dgca-issuance-web
        APP_IMAGE: docker.pkg.github.com/${{ github.repository }}/dgca-issuance-web
        CF_API: ${{ secrets.CF_API }}
        CF_ORG: ${{ secrets.CF_ORG }}
        CF_SPACE: ${{ secrets.CF_SPACE }}
        CF_USERNAME: ${{ secrets.CF_USERNAME }}
        CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
        CF_DOCKER_USERNAME: ${{ github.actor }}
        CF_DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

